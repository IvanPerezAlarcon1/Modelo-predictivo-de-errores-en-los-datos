----------------------COSAS POR HACER-------------------
- Se podrian ir realizando las pruebas y programacion al mismo tiempo, empezando por emplear n-grams para los datos string y ver si funciona
bien la detección y corrección
- ver como ir agregando columnas y sus indicadores respectivos a medida que se vayan ingresando nuevas columnas
- Ver comparación de columnas del conjunto de datos de entrada con las del diccionario para detectar cuales están registradas y cuales no
- Se podría particionar la tabla UNIQUE_VALUES_STRING_COLUMNS para optimizar tiempos de carga, o agregar indices
- INDICADOR DE SI ACEPTA O NO NUEVOS VALORES LA COLUMNA, mediante el ingreso por archivo de ingreso

- Ver el escenario donde se ingresen las mismas columnas, pero en distinto orden

- Si existe alguna columna que tenga más de un 10% de valores nulos, el conjunto completo no debería ingresarse a la tabla final, ya que no sería representativo hacer algún tipo de acción con
información tan vaga



+ #FALTA CORROBORAR QUE EL DATAFRAME INGRESADO ESTÉ CONTEXTUALIZADO EFECTIVAMENTE, SI NO LO ESTÁ, DEBERÍA CREARSE, SI ESTÁ CONTEXTUALIZADO, SE DEBERÍA EJECUTAR EL CÓDIGO DE AQUÍ 
  Y DEJAR EL DF RESULTANTE EN LA TABLA FINAL EN LA BDD
+ FALTA HACER LA CORROBORACION DE QUE LA COLUMNA PUEDA O NO PUEDA CONTENER NULOS O OUTLIERS, PARA STRINGS Y NUMERICAS
+ VER COMO HACER EL INGRESO DE DATOS LUEGO DEL PRIMER INGRESO Y CONTEXTUALIZACION, YA QUE SE DEBEN COMPROBAR LOS CAMPOS DEL DF DE ENTRADA Y LOS DE LA TABLA DESTINO
+ EN EL PRIMER INGRESO DE DATOS, TAMBIEN DEBERÍA REGISTRAR LOS INDICADORES, LUEGO CORREGIR POR PRIMERA VEZ LOS DATOS Y GUARDARLOS EN EL HISTÓRICO -> (YA HECHO)

+ Hacer el main de correcciones una vez constextualizado el prototipo
+ Hacer el almacenamiento de la tabla histórica de datos depurados del contexto.
+ Ver como hacer que al eliminar una columna del diccionario de datos, si es string, se borren los valores únicos para esa columna, o hacer
que no la tome, en caso de no requerirla más. Eliminacion en cascada de la tabla UNIQUE_VALUES
+ Validar escenario donde se ingrese un conjunto con nombres de columnas distintos a los registrados o las mismas columnas más otras o algunas pero no todas de las registradas
+ Hacer la retroalimentación del diccionario de datos cuando se ingresen datos al diccionario
+ Ver si agregar la expresión regular como validación a las columnas string
+ Hacer las validaciones de indicadores de si la columna acepta outliers(col numericas) y/o nulos(string/numericas), si los acepta, deja pasar las columnas
 NOTA: Se podría validar este caso con la columna que tiene casi todos los valores nulos, podría simplemente aceptarla así
+ Ver si se agrega el IRQ al diccionario
+ El analista podría ingresar valores únicos a la tabla en caso de requerirse, actualmente se haría mediante un insert




- Ver las excepciones luego de programar lo principal, como la funcionalidad de indicadores de nulos y outliers en el prototipo para cada columna, uso de expresión regular, etc.
- LEER DEA PARA EJEMPLOS DE COMO REALIZAR LAS PRUEBAS DEL PROTOTIPO

-----------------YA REALIZADOS---------------------------
- Para n grams, podría ocupar un algoritmo para cadenas de más de una palabra y otro para cadenas de una sola palabra, o simplemente
abarcar campos de más de 1 palabra. Programar este segundo escenario primero para avanzar
- Probar los tipos de duplicados con las funciones que se quieren usar

- Hacer funcion que me traiga los valores únicos de la columna string que se está analizando
- Ver como hacer las funciones de imputación de datos para avanzar, tomar en cuenta que se revisa por columna
- Hacer funcion que saque los ngrams de una cadena y otra que calcule el indice de similitud
--ya se arreglaron las columnas string, Funciona con columnas que tengan problemas de letras extra letras faltantes, funciona mal
cuando se tienen problemas de orden de palabras en una cadena